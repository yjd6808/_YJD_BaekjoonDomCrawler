{"_dom":{},"_document":{"location":{"href":"about:blank","origin":"null","protocol":"about:","host":"","hostname":"","port":"","pathname":"blank","search":"","hash":""}},"_number":1921,"_title":"트리와 쿼리 20","_timeLimit":5,"_memoryLimit":512,"_submitPeopleCount":1,"_answerPeopleCount":0,"_correctAnswerRate":0,"_problemDescriptionParagraphsArray":[{"paragraph":"$N$개의 정점으로 이루어진 포레스트가 있다. 정점은 $1$부터 $N$까지 번호가 매겨져 있으며, 간선은 없다. 모든 정점 $v$는 정수 $X_v$를 가지고 있고, 초기값은 $X_v = 1$이다."},{"paragraph":"아래의 쿼리를 수행하는 프로그램을 작성하시오."},{"paragraph":"1 $a$ $b$ $c$: 정점 $a$와 $b$를 가중치가 $c$인 간선으로 연결한다. 쿼리의 수행 결과가 포레스트인 경우만 입력으로 주어진다.\n\t2 $a$ $b$: 정점 $a$와 $b$를 연결하는 간선을 제거한다. 두 정점 사이에 간선이 있는 경우만 입력으로 주어진다.\n\t3 $a$: $X_a$를 $1-X_a$로 변경한다. 그 다음 $a$가 포함된 트리에서 다음을 구한다.\n\t\n\t\t트리의 정점을 $v_1, v_2, \\dots, v_k$라고 하자. 이때 $\\min_{1 \\le i \\le k}{\\left\\{ \\sum_{1 \\le j \\le k}{dist(v_i, v_j) \\times X_{v_j}} \\right\\}}$를 구해 출력한다. $dist(v_i, v_j)$는 $v_i$에서 $v_j$로 가는 경로에 있는 모든 간선의 가중치를 더한 값이다."}],"_problemDescriptionTagsArray":[{"tag":"$N$개의 정점으로 이루어진 포레스트가 있다. 정점은 $1$부터 $N$까지 번호가 매겨져 있으며, 간선은 없다. 모든 정점 $v$는&nbsp;정수 $X_v$를 가지고 있고, 초기값은 $X_v = 1$이다."},{"tag":"아래의 쿼리를 수행하는 프로그램을 작성하시오."},{"tag":"\n\t<li>1 $a$ $b$ $c$: 정점 $a$와 $b$를 가중치가 $c$인 간선으로 연결한다. 쿼리의 수행 결과가 포레스트인 경우만 입력으로 주어진다.</li>\n\t<li>2 $a$ $b$: 정점 $a$와 $b$를 연결하는 간선을 제거한다. 두 정점 사이에 간선이 있는 경우만 입력으로 주어진다.</li>\n\t<li>3 $a$: $X_a$를 $1-X_a$로 변경한다. 그 다음 $a$가 포함된 트리에서 다음을 구한다.\n\t<ul>\n\t\t<li>트리의 정점을 $v_1, v_2, \\dots, v_k$라고 하자. 이때&nbsp;$\\min_{1 \\le i \\le k}{\\left\\{ \\sum_{1 \\le j \\le k}{dist(v_i, v_j) \\times X_{v_j}} \\right\\}}$를 구해 출력한다. $dist(v_i, v_j)$는 $v_i$에서&nbsp;$v_j$로 가는 경로에 있는 모든 간선의 가중치를 더한 값이다.</li>\n\t</ul>\n\t</li>\n"}],"_inputDescriptionParagraphsArray":[{"paragraph":"첫째 줄에 정점의 개수 $N$, 쿼리의 개수 $Q$가 주어진다. 둘째 줄부터 Q개의 줄에 쿼리가 한 줄에 하나씩 주어진다."},{"paragraph":"입력으로 주어지는 쿼리의 정점 번호(1, 2번 쿼리의 $a$, $b$, 3번 쿼리의 $a$)는 암호화 되어 있어 쿼리를 수행하기 전에 해독해야 한다. 입력으로 주어진 정점 번호가 $x$이고, 이전 3번 쿼리에서 구한 값이 $S$인 경우 해독한 정점의 번호는 $(x-1+S) \\bmod {n} + 1$ 이다."}],"_outputDescriptionParagraphsArray":[{"paragraph":"3번 쿼리에서 구한 값을 한 줄에 하나씩 쿼리가 주어진 순서대로 출력한다."}],"_samples":[{"inputSample":"3 7\n1 1 2 3\n1 3 1 1\n3 1\n2 1 3\n3 1\n1 2 1 2\n3 2\n","outputSample":"4\n0\n0\n"},{"inputSample":"5 17\n1 1 5 10\n1 3 1 7\n1 5 2 5\n1 3 4 2\n2 3 1\n1 4 1 6\n2 5 2\n3 1\n3 2\n3 2\n1 2 1 2\n3 4\n2 5 1\n1 4 5 2\n2 3 4\n1 3 5 9\n3 5\n","outputSample":"18\n2\n0\n0\n9\n"},{"inputSample":"10 37\n1 2 3 6428496\n1 7 10 41603701\n1 2 7 61903527\n1 1 6 57606292\n1 2 1 43682226\n1 8 2 59090781\n3 6\n3 10\n1 10 7 15269842\n3 6\n3 7\n1 3 10 39799671\n1 3 5 28501778\n3 5\n2 1 10\n1 6 10 37641690\n2 9 6\n3 8\n1 6 8 89420938\n3 9\n2 6 3\n1 9 6 17757145\n2 9 3\n1 1 9 26575112\n2 3 8\n1 2 1 19670627\n2 3 5\n1 1 5 12760556\n2 3 4\n1 4 1 36949637\n3 7\n2 6 9\n1 6 8 74850387\n2 3 8\n3 3\n1 7 3 77007154\n3 3\n","outputSample":"274612258\n215521477\n187109093\n171839251\n211638922\n68332023\n151324465\n224010174\n0\n223740409\n"}],"_stasticsDateTick":1624850957364,"_hintDescriptionParagraphsArray":[]}